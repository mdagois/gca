include "data.rgbinc"
include "memory.rgbinc"

export _Counter_Initialize, _Counter_SetCount, _Counter_UpdateGraphics

def COUNTER_X                   equ (OAM_X_OFS + TILE_SIDE * (BOARD_TILE_NUM_X + BOARD_TILE_OFFSET_X) + 6)
def COUNTER_Y                   equ (OAM_Y_OFS + TILE_SIDE)
def COUNTER_DIGIT_ADVANCE_X     equ (TILE_SIDE - 3)

section "counter", rom0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

_Counter_Initialize:
    ; set the vertical position of all OAMs
    ld a, COUNTER_Y
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 0) + OAMA_Y], a
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 1) + OAMA_Y], a
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 2) + OAMA_Y], a

    ; set the horizontal position of all OAMs
    ld a, COUNTER_X
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 0) + OAMA_X], a
    add a, COUNTER_DIGIT_ADVANCE_X
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 1) + OAMA_X], a
    add a, COUNTER_DIGIT_ADVANCE_X
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 2) + OAMA_X], a

    ; set the tile id to a default value for all OAMs
    ld a, TILE_UI_NUMBER_0
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 0) + OAMA_TILEID], a
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 1) + OAMA_TILEID], a
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 2) + OAMA_TILEID], a

    ; OAM flags are not used, so set to zero
    xor a
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 0) + OAMA_FLAGS], a
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 1) + OAMA_FLAGS], a
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 2) + OAMA_FLAGS], a

    ret

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

_Counter_SetCount:
    ; (a) must hold the desired value for the counter

    ; compute the hundreds into (b)
    ; (a) is also updated to remove the hundreds
    ld b, $FF
    .hundreds
        inc b
        sub a, 100
    jr nc, .hundreds
    add a, 100

    ; set up the tile id for the hundreds' OAM
    ld c, a
    ld a, TILE_UI_NUMBER_0
    add a, b
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 0) + OAMA_TILEID], a 
    ld a, c
    
    ; compute the tens into (b)
    ; (a) is also updated to remove the tens
    ld b, $FF
    .tens
        inc b
        sub a, 10
    jr nc, .tens
    add a, 10
    
    ; set up the tile id for the tens' OAM
    ld c, a
    ld a, TILE_UI_NUMBER_0
    add a, b
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 1) + OAMA_TILEID], a
    ld a, c

    ; at that point, (a) contains the units
    ; set up the tile id for the units' OAM
    ld b, TILE_UI_NUMBER_0
    add a, b
    ldh [vCounterOam + (sizeof_OAM_ATTRS * 2) + OAMA_TILEID], a

    ret

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

_Counter_UpdateGraphics:
    CopyMemory OAM_COUNTER, vCounterOam, sizeof_OAM_ATTRS * COUNTER_DIGITS_COUNT
    ret

