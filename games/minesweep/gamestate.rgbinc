if !def(GAME_RGBINC)
def GAME_RGBINC equ 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Game state function
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

rsreset

; wait for the player to press start to launch a new game
def GAMESTATE_FUNC_ID_WAIT_FOR_NEW_GAME		rb 1

; prepare the board for a new game
def GAMESTATE_FUNC_ID_NEW_GAME				rb 1

; handle player's actions
def GAMESTATE_FUNC_ID_PLAY					rb 1

; the player uses a flag
def GAMESTATE_FUNC_ID_FLAG					rb 1

; show the board with all tiles uncovered at the end of the game
def GAMESTATE_FUNC_ID_SHOW_RESULTS			rb 1

; the player uncovers a tile
def GAMESTATE_FUNC_ID_UNCOVER				rb 1

; the player lost the game
def GAMESTATE_FUNC_ID_LOSE					rb 1

; the player won the game
def GAMESTATE_FUNC_ID_WIN					rb 1

def GAMESTATE_FUNC_IDS_COUNT				rb 0

; initialize the game states
macro GameState_Initialize
	call _GameState_Initialize
endm

; set the state function id
macro GameState_SetFuncId
	copy [vGameStateFuncId], \1
endm

; call the current state function
macro GameState_CallFunc
	CallFunctionFromTable _game_state_functions, [vGameStateFuncId]
endm

endc

