if !def(MEMORY_RGBINC)
def MEMORY_RGBINC equ 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

include "utils.rgbinc"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; a chunk is a group of 20x2 tiles
; the memory holds up to 9 chunks for a total of 20x18 tiles, a screen worth of tiles
def TILE_BYTE_SIZE							equ (16)
def TILE_ROWS_PER_CHUNK						equ (2)
def CHUNK_BYTE_SIZE							equ (TILE_BYTE_SIZE * SCRN_X_B * TILE_ROWS_PER_CHUNK)
def CHUNKS_MAX_COUNT						equ (9)
def CHUNK_DATA_MAX_SIZE						equ (CHUNK_BYTE_SIZE * CHUNKS_MAX_COUNT)

assert CHUNK_BYTE_SIZE == $0280, "Unexpected chunk size"

rsreset
def CHUNK_PROPERTY_COMPRESSION				rb 1
def CHUNK_PROPERTY_DATA_SIZE				rb 2
def sizeof_CHUNK_PROPERTY					rb 0

def CHUNK_PROPERTIES_MAX_SIZE				equ (sizeof_CHUNK_PROPERTY * CHUNKS_MAX_COUNT)

rsreset
def PRINT_PARAMETER_SHEET_COUNT				rb 1
def PRINT_PARAMETER_MARGINS					rb 1
def PRINT_PARAMETER_PALETTE					rb 1
def PRINT_PARAMETER_BURNING					rb 1
def sizeof_PRINT_PARAMETERS					rb 0

rsreset
def PRINTER_CONTROL_BIT_REFRESH_PALETTE		rb 1
def PRINTER_CONTROL_BIT_PROCESS_CHUNKS		rb 1
def PRINTER_CONTROL_BIT_TRANSFER_TILES		rb 1
def PRINTER_CONTROL_BIT_CLEAR_UNUSED_TILES	rb 1
def PRINTER_CONTROL_BIT_COUNT				rb 0

assert PRINTER_CONTROL_BIT_COUNT <= 8, "Too many control bits defined"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; WRAM
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

rsset _RAM

; hold the image data (up to 9 chunks)
def vImageData						rb CHUNK_DATA_MAX_SIZE

; hold temporary data during chunk decompression
def vDecompressedChunk				rb CHUNK_BYTE_SIZE
def vDecompressedSize				rb 2

def WRAM_END						rb 0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; HRAM
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

rsset _HRAM

; indicates whether the vblank ocurred or not
def vIsVblank						rb 1

def vPadInput						rb sizeof_PAD_INPUT

; hold data during packet transfer
def vPacketType						rb 1
def vPacketChecksum					rb 2
def vStatus							rb 1

; hold flags that are raised only after the packet is processed
def vStatusDelayed					rb 1

; hold error flags that are raised via user input
def vStatusUserTriggeredErrors		rb 1

; type of the next expected byte
def vNextByte						rb 1

; size of the image data currently held in memory
; used to track whether memory is full or not
def vImageDataSize					rb 2

; hold the print parameters
def vPrintParameters				rb sizeof_PRINT_PARAMETERS

; amount of packet data received (for data and print packets)
def vReceivedDataSize				rb 2

; tracks amount of image data transferred to VRAM during print
def vVramTransferredSize			rb 2

; control flags
def vControlFlags					rb 1

; timeout counter
def vTimeoutCounter					rb 1

; hold up to 9 chunk properties
def vChunkCount						rb 1
def vChunkProperties				rb CHUNK_PROPERTIES_MAX_SIZE
def vChunkPropertyDummy				rb sizeof_CHUNK_PROPERTY

def HRAM_END						rb 0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

endc

