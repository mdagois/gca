include "utils.rgbinc"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

section "vblank_interrupt", rom0[$0040]
	reti

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

section "graphics", rom0

graphics_data:
incbin "tileset.chr"
incbin "sgb_detection.tlm"
graphics_data_end:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

section "sample", rom0

def MODEL_NUMBER_TILE_ADDRESS	equ (_SCRN0 + 3 * SCRN_VX_B + 15)
def TILE_ZERO_INDEX				equ (80)

; (b) = hardware model
Initialize:
	ld a, %11100100
	ld [rBGP], a

	ld de, _VRAM8000
	ld hl, graphics_data
	.data_copy
		copy [de], [hli]
		inc de

		ld a, l
		cp a, low(graphics_data_end)
		jr nz, .data_copy
		ld a, h
		cp a, high(graphics_data_end)
		jr nz, .data_copy

	; output the hardware model number to the LCD
	ld hl, MODEL_NUMBER_TILE_ADDRESS
	ld a, TILE_ZERO_INDEX
	add a, b
	ld [hl], a

	; set the graphics parameters and turn back LCD on
	ld a, LCDCF_ON | LCDCF_BG8800 | LCDCF_BG9800 | LCDCF_BGON
	ld [rLCDC], a

	ret

InitSample:
	ld b, 0
	ld a, [HARDWARE_MODEL_REGISTER]

	inc b
	dec a
	jp z, Initialize

	inc b
	dec a
	jp z, Initialize

	inc b
	dec a
	jp z, Initialize

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

UpdateSample:
	halt
	ret

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

export InitSample, UpdateSample

